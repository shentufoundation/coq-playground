{
  "name":"software-foundations",
  "deps":[],
  "pkgs":[],
  "chunks":[
    {
      "name":"sf-LF",
      "deps":[],
      "archive":"sf-LF.coq-pkg",
      "pkgs":[
        {
          "pkg_id":["LF"],
          "vo_files":[
            ["AltAuto.vo",null],
            ["Auto.vo",null],
            ["Basics.vo",null],
            ["Bib.vo",null],
            ["Extraction.vo",null],
            ["Imp.vo",null],
            ["ImpCEvalFun.vo",null],
            ["ImpHugo.vo",null],
            ["ImpParser.vo",null],
            ["IndPrinciples.vo",null],
            ["IndProp.vo",null],
            ["Induction.vo",null],
            ["Lists.vo",null],
            ["Logic.vo",null],
            ["Maps.vo",null],
            ["Poly.vo",null],
            ["Postscript.vo",null],
            ["Preface.vo",null],
            ["ProofObjects.vo",null],
            ["Rel.vo",null],
            ["Review1.vo",null],
            ["Review2.vo",null],
            ["Tactics.vo",null]
          ],
          "cma_files":[]
        }
      ],
      "modDeps":{
        "LF.AltAuto":[
          "Coq.Arith.Arith",
          "Coq.Lists.List",
          "LF.IndProp",
          "Coq.micromega.Lia",
          "Coq.setoid_ring.Ring"
        ],
        "LF.Auto":["Coq.micromega.Lia","LF.Maps","LF.Imp"],
        "LF.Basics":["Coq.Strings.String"],
        "LF.Extraction":[
          "Coq.extraction.Extraction",
          "Coq.Arith.Arith",
          "Coq.Init.Nat",
          "Coq.Arith.EqNat",
          "LF.ImpCEvalFun",
          "Coq.extraction.ExtrOcamlBasic",
          "Coq.extraction.ExtrOcamlString",
          "LF.Imp",
          "LF.ImpParser",
          "LF.Maps"
        ],
        "LF.Imp":[
          "Coq.Bool.Bool",
          "Coq.Init.Nat",
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.micromega.Lia",
          "Coq.Lists.List",
          "Coq.Strings.String",
          "LF.Maps"
        ],
        "LF.ImpCEvalFun":[
          "Coq.micromega.Lia",
          "Coq.Arith.Arith",
          "Coq.Arith.PeanoNat",
          "Coq.Arith.EqNat",
          "LF.Imp",
          "LF.Maps"
        ],
        "LF.ImpHugo":["Coq.Strings.String","Ltac2.String","Coq.Bool.Bool","Ltac2.Bool"],
        "LF.ImpParser":[
          "Coq.Strings.String",
          "Coq.Strings.Ascii",
          "Coq.Arith.Arith",
          "Coq.Init.Nat",
          "Coq.Arith.EqNat",
          "Coq.Lists.List",
          "LF.Maps",
          "LF.Imp"
        ],
        "LF.IndPrinciples":["LF.ProofObjects"],
        "LF.IndProp":["LF.Logic","Coq.micromega.Lia","Coq.Strings.Ascii"],
        "LF.Induction":["LF.Basics"],
        "LF.Lists":["LF.Induction"],
        "LF.Logic":["LF.Tactics","Coq.Setoids.Setoid"],
        "LF.Maps":[
          "Coq.Arith.Arith",
          "Coq.Bool.Bool",
          "Coq.Strings.String",
          "Coq.Logic.FunctionalExtensionality",
          "Coq.Lists.List"
        ],
        "LF.Poly":["LF.Lists"],
        "LF.ProofObjects":["LF.IndProp"],
        "LF.Rel":["LF.IndProp"],
        "LF.Review1":["LF.IndPrinciples"],
        "LF.Tactics":["LF.Poly"]
      }
    },
    {
      "name":"sf-PLF",
      "deps":[],
      "archive":"sf-PLF.coq-pkg",
      "pkgs":[
        {
          "pkg_id":["PLF"],
          "vo_files":[
            ["Bib.vo",null],
            ["Equiv.vo",null],
            ["Equiv2.vo",null],
            ["Hoare.vo",null],
            ["Hoare2.vo",null],
            ["HoareAsLogic.vo",null],
            ["Imp.vo",null],
            ["LibTactics.vo",null],
            ["Maps.vo",null],
            ["MoreStlc.vo",null],
            ["Norm.vo",null],
            ["PE.vo",null],
            ["Postscript.vo",null],
            ["Preface.vo",null],
            ["RecordSub.vo",null],
            ["Records.vo",null],
            ["References.vo",null],
            ["Smallstep.vo",null],
            ["Stlc.vo",null],
            ["StlcProp.vo",null],
            ["Sub.vo",null],
            ["Typechecking.vo",null],
            ["Types.vo",null],
            ["UseAuto.vo",null],
            ["UseTactics.vo",null],
            ["sub_notations.vo",null]
          ],
          "cma_files":[]
        }
      ],
      "modDeps":{
        "PLF.Equiv":[
          "PLF.Maps",
          "Coq.Bool.Bool",
          "Coq.Arith.Arith",
          "Coq.Init.Nat",
          "Coq.Arith.PeanoNat",
          "Coq.Arith.EqNat",
          "Coq.micromega.Lia",
          "Coq.Lists.List",
          "Coq.Logic.FunctionalExtensionality",
          "PLF.Imp"
        ],
        "PLF.Equiv2":[
          "PLF.Maps",
          "Coq.Bool.Bool",
          "Coq.Arith.Arith",
          "Coq.Init.Nat",
          "Coq.Arith.PeanoNat",
          "Coq.Arith.EqNat",
          "Coq.micromega.Lia",
          "Coq.Lists.List",
          "Coq.Logic.FunctionalExtensionality",
          "PLF.Imp",
          "PLF.Equiv"
        ],
        "PLF.Hoare":[
          "PLF.Maps",
          "Coq.Bool.Bool",
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.Arith.PeanoNat",
          "Coq.micromega.Lia",
          "PLF.Imp"
        ],
        "PLF.Hoare2":[
          "Coq.Strings.String",
          "PLF.Maps",
          "Coq.Bool.Bool",
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.Arith.PeanoNat",
          "Coq.micromega.Lia",
          "PLF.Imp",
          "PLF.Hoare",
          "Coq.Numbers.Natural.Peano.NPeano"
        ],
        "PLF.HoareAsLogic":["PLF.Maps","PLF.Hoare"],
        "PLF.Imp":[
          "Coq.Bool.Bool",
          "Coq.Init.Nat",
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.micromega.Lia",
          "Coq.Lists.List",
          "Coq.Strings.String",
          "PLF.Maps"
        ],
        "PLF.LibTactics":[
          "Coq.Lists.List",
          "Coq.Numbers.BinNums",
          "Coq.ZArith.BinInt",
          "Coq.Logic.ProofIrrelevance",
          "Coq.Program.Equality",
          "Coq.Arith.Compare_dec",
          "Coq.micromega.Lia"
        ],
        "PLF.Maps":[
          "Coq.Arith.Arith",
          "Coq.Bool.Bool",
          "Coq.Strings.String",
          "Coq.Logic.FunctionalExtensionality",
          "Coq.Lists.List"
        ],
        "PLF.MoreStlc":["PLF.Maps","PLF.Types","PLF.Smallstep","PLF.Stlc"],
        "PLF.Norm":["Coq.Lists.List","Coq.Strings.String","PLF.Maps","PLF.Smallstep"],
        "PLF.PE":[
          "PLF.Maps",
          "Coq.Bool.Bool",
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.Arith.PeanoNat",
          "Coq.micromega.Lia",
          "Coq.Logic.FunctionalExtensionality",
          "Coq.Lists.List",
          "PLF.Smallstep",
          "PLF.Imp"
        ],
        "PLF.RecordSub":["Coq.Strings.String","PLF.Maps","PLF.Smallstep"],
        "PLF.Records":["Coq.Strings.String","PLF.Maps","PLF.Smallstep","PLF.Stlc"],
        "PLF.References":[
          "Coq.Strings.String",
          "Coq.Init.Nat",
          "Coq.Arith.Arith",
          "Coq.Arith.PeanoNat",
          "Coq.micromega.Lia",
          "PLF.Maps",
          "PLF.Smallstep",
          "Coq.Lists.List"
        ],
        "PLF.Smallstep":[
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.Init.Nat",
          "Coq.micromega.Lia",
          "Coq.Lists.List",
          "PLF.Maps",
          "PLF.Imp"
        ],
        "PLF.Stlc":["Coq.Strings.String","PLF.Maps","PLF.Smallstep"],
        "PLF.StlcProp":["PLF.Maps","PLF.Types","PLF.Stlc","PLF.Smallstep"],
        "PLF.Sub":[
          "Coq.Strings.String",
          "PLF.Maps",
          "PLF.Types",
          "PLF.Smallstep",
          "Coq.funind.Recdef"
        ],
        "PLF.Typechecking":["Coq.Bool.Bool","PLF.Maps","PLF.Smallstep","PLF.Stlc","PLF.MoreStlc"],
        "PLF.Types":["Coq.Arith.Arith","PLF.Maps","PLF.Smallstep","PLF.Imp"],
        "PLF.UseAuto":[
          "Coq.Arith.Arith",
          "PLF.Maps",
          "PLF.Smallstep",
          "PLF.LibTactics",
          "PLF.Stlc",
          "PLF.Imp",
          "Coq.Lists.List",
          "PLF.StlcProp",
          "Coq.Program.Program",
          "Coq.micromega.Lia",
          "PLF.References",
          "PLF.Sub",
          "Coq.ZArith.ZArith"
        ],
        "PLF.UseTactics":[
          "Coq.Arith.Arith",
          "PLF.Maps",
          "PLF.Stlc",
          "PLF.Types",
          "PLF.Smallstep",
          "PLF.LibTactics",
          "PLF.Equiv",
          "PLF.References",
          "PLF.Hoare",
          "PLF.Sub"
        ],
        "PLF.sub_notations":["Coq.Strings.String"]
      }
    },
    {
      "name":"sf-VFA",
      "deps":[],
      "archive":"sf-VFA.coq-pkg",
      "pkgs":[
        {
          "pkg_id":["VFA"],
          "vo_files":[
            ["ADT.vo",null],
            ["BagPerm.vo",null],
            ["Binom.vo",null],
            ["Color.vo",null],
            ["Decide.vo",null],
            ["Extract.vo",null],
            ["Maps.vo",null],
            ["Merge.vo",null],
            ["Multiset.vo",null],
            ["Perm.vo",null],
            ["Preface.vo",null],
            ["Priqueue.vo",null],
            ["Redblack.vo",null],
            ["SearchTree.vo",null],
            ["Selection.vo",null],
            ["Sort.vo",null],
            ["Trie.vo",null]
          ],
          "cma_files":[]
        }
      ],
      "modDeps":{
        "VFA.ADT":[
          "Coq.Strings.String",
          "VFA.Perm",
          "VFA.Maps",
          "VFA.SearchTree",
          "Coq.Lists.List",
          "Ltac2.List"
        ],
        "VFA.BagPerm":[
          "Coq.Strings.String",
          "Coq.Setoids.Setoid",
          "Coq.Classes.Morphisms",
          "VFA.Perm",
          "VFA.Sort"
        ],
        "VFA.Binom":["Coq.Strings.String","VFA.Perm","VFA.Priqueue"],
        "VFA.Color":[
          "Coq.Lists.List",
          "Ltac2.List",
          "Coq.Setoids.Setoid",
          "Coq.FSets.FSets",
          "Coq.FSets.FMaps",
          "Coq.PArith.PArith",
          "VFA.Perm",
          "Coq.funind.Recdef"
        ],
        "VFA.Decide":["VFA.Perm"],
        "VFA.Extract":[
          "VFA.Perm",
          "Coq.extraction.Extraction",
          "LF.Extraction",
          "Coq.ZArith.ZArith"
        ],
        "VFA.Maps":["Coq.Bool.Bool","Coq.Logic.FunctionalExtensionality","VFA.Perm"],
        "VFA.Merge":["VFA.Perm","VFA.Sort","Coq.funind.Recdef"],
        "VFA.Multiset":[
          "Coq.Strings.String",
          "Coq.Logic.FunctionalExtensionality",
          "VFA.Perm",
          "VFA.Sort"
        ],
        "VFA.Perm":[
          "Coq.Strings.String",
          "Coq.Bool.Bool",
          "Coq.Arith.Arith",
          "Coq.Arith.EqNat",
          "Coq.micromega.Lia",
          "Coq.Lists.List",
          "Coq.Sorting.Permutation"
        ],
        "VFA.Priqueue":["VFA.Perm"],
        "VFA.Redblack":[
          "Coq.Strings.String",
          "Coq.Logic.FunctionalExtensionality",
          "Coq.ZArith.ZArith",
          "VFA.Perm",
          "VFA.Extract"
        ],
        "VFA.SearchTree":[
          "Coq.Strings.String",
          "Coq.Logic.FunctionalExtensionality",
          "VFA.Perm",
          "VFA.Maps",
          "VFA.Sort"
        ],
        "VFA.Selection":["VFA.Perm","Coq.Lists.List","Coq.funind.Recdef","VFA.Multiset"],
        "VFA.Sort":["VFA.Perm"],
        "VFA.Trie":[
          "Coq.Strings.String",
          "Coq.ZArith.ZArith",
          "Coq.PArith.PArith",
          "VFA.Perm",
          "VFA.Maps"
        ]
      }
    },
    {
      "name":"sf-SLF",
      "deps":[],
      "archive":"sf-SLF.coq-pkg",
      "pkgs":[
        {
          "pkg_id":["SLF"],
          "vo_files":[
            ["Affine.vo",null],
            ["Basic.vo",null],
            ["Bib.vo",null],
            ["Credits.vo",null],
            ["Ghost.vo",null],
            ["Himpl.vo",null],
            ["Hprop.vo",null],
            ["LibAxioms.vo",null],
            ["LibBool.vo",null],
            ["LibChoice.vo",null],
            ["LibContainer.vo",null],
            ["LibCore.vo",null],
            ["LibEpsilon.vo",null],
            ["LibEqual.vo",null],
            ["LibFix.vo",null],
            ["LibFun.vo",null],
            ["LibInt.vo",null],
            ["LibList.vo",null],
            ["LibListExec.vo",null],
            ["LibListZ.vo",null],
            ["LibLogic.vo",null],
            ["LibMap.vo",null],
            ["LibMin.vo",null],
            ["LibMonoid.vo",null],
            ["LibMultiset.vo",null],
            ["LibNat.vo",null],
            ["LibOperation.vo",null],
            ["LibOption.vo",null],
            ["LibOrder.vo",null],
            ["LibProd.vo",null],
            ["LibReflect.vo",null],
            ["LibRelation.vo",null],
            ["LibSepFmap.vo",null],
            ["LibSepFunctor.vo",null],
            ["LibSepMinimal.vo",null],
            ["LibSepMoreTriples.vo",null],
            ["LibSepReference.vo",null],
            ["LibSepSimpl.vo",null],
            ["LibSepSimpl2.vo",null],
            ["LibSepTLCbuffer.vo",null],
            ["LibSepTyping.vo",null],
            ["LibSepVar.vo",null],
            ["LibSepWpgenSummary.vo",null],
            ["LibSet.vo",null],
            ["LibString.vo",null],
            ["LibSum.vo",null],
            ["LibTactics.vo",null],
            ["LibUnit.vo",null],
            ["LibWf.vo",null],
            ["Nondet.vo",null],
            ["Partial.vo",null],
            ["Postscript.vo",null],
            ["Preface.vo",null],
            ["Repr.vo",null],
            ["Rich.vo",null],
            ["Rules.vo",null],
            ["Struct.vo",null],
            ["WPgen.vo",null],
            ["WPsem.vo",null],
            ["Wand.vo",null]
          ],
          "cma_files":[]
        }
      ],
      "modDeps":{
        "SLF.Affine":["SLF.Rules","SLF.LibSepReference"],
        "SLF.Basic":["SLF.LibSepReference"],
        "SLF.Credits":["SLF.LibSepReference","SLF.LibSepFunctor","SLF.LibSepFmap"],
        "SLF.Ghost":[
          "SLF.LibString",
          "SLF.LibCore",
          "SLF.LibSepTLCbuffer",
          "SLF.LibSepFmap",
          "SLF.LibSepFunctor"
        ],
        "SLF.Himpl":["SLF.LibSepReference","SLF.Hprop"],
        "SLF.Hprop":["SLF.LibSepReference"],
        "SLF.LibBool":["SLF.LibTactics","SLF.LibLogic","SLF.LibOperation"],
        "SLF.LibChoice":["SLF.LibTactics","SLF.LibLogic","SLF.LibEpsilon","SLF.LibRelation"],
        "SLF.LibContainer":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect"],
        "SLF.LibCore":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibOperation",
          "SLF.LibReflect",
          "SLF.LibUnit",
          "SLF.LibProd",
          "SLF.LibSum",
          "SLF.LibOption",
          "SLF.LibNat",
          "SLF.LibInt",
          "SLF.LibList",
          "SLF.LibRelation",
          "SLF.LibOrder",
          "SLF.LibWf"
        ],
        "SLF.LibEpsilon":["SLF.LibTactics","SLF.LibLogic","SLF.LibRelation"],
        "SLF.LibEqual":["SLF.LibTactics","SLF.LibAxioms","Coq.Logic.JMeq"],
        "SLF.LibFix":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibEpsilon",
          "SLF.LibInt",
          "SLF.LibNat"
        ],
        "SLF.LibFun":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibContainer",
          "SLF.LibSet",
          "SLF.LibList"
        ],
        "SLF.LibInt":[
          "Coq.ZArith.ZArith",
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibRelation",
          "SLF.LibNat"
        ],
        "SLF.LibList":[
          "Coq.Classes.Morphisms",
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibOperation"
        ],
        "SLF.LibListExec":["SLF.LibTactics","SLF.LibReflect","SLF.LibList"],
        "SLF.LibListZ":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibOperation",
          "SLF.LibReflect",
          "SLF.LibList",
          "SLF.LibNat",
          "SLF.LibInt",
          "SLF.LibContainer"
        ],
        "SLF.LibLogic":["SLF.LibTactics","SLF.LibAxioms","SLF.LibEqual"],
        "SLF.LibMap":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibOption",
          "SLF.LibContainer"
        ],
        "SLF.LibMin":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibOperation",
          "SLF.LibNat"
        ],
        "SLF.LibMonoid":["SLF.LibTactics","SLF.LibLogic","SLF.LibOperation"],
        "SLF.LibMultiset":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect","SLF.LibContainer"],
        "SLF.LibNat":[
          "Coq.Arith.Arith",
          "Coq.micromega.Lia",
          "SLF.LibTactics",
          "SLF.LibReflect",
          "SLF.LibBool",
          "SLF.LibOperation",
          "SLF.LibRelation",
          "SLF.LibOrder"
        ],
        "SLF.LibOperation":["SLF.LibTactics"],
        "SLF.LibOption":["SLF.LibTactics","SLF.LibReflect"],
        "SLF.LibOrder":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibOperation",
          "SLF.LibRelation"
        ],
        "SLF.LibProd":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect"],
        "SLF.LibReflect":["SLF.LibTactics","SLF.LibBool","SLF.LibLogic"],
        "SLF.LibRelation":[
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibBool",
          "SLF.LibProd",
          "SLF.LibSum",
          "SLF.LibOperation"
        ],
        "SLF.LibSepFmap":["SLF.LibCore"],
        "SLF.LibSepFunctor":["SLF.LibCore","SLF.LibMonoid","SLF.LibSepTLCbuffer","SLF.LibSepSimpl2"],
        "SLF.LibSepMinimal":["SLF.LibString","SLF.LibCore","SLF.LibSepTLCbuffer","SLF.LibSepFmap"],
        "SLF.LibSepMoreTriples":[
          "SLF.LibCore",
          "SLF.LibSepTLCbuffer",
          "SLF.LibSepVar",
          "SLF.LibSepFmap",
          "SLF.LibChoice",
          "SLF.LibSepReference"
        ],
        "SLF.LibSepReference":[
          "SLF.LibCore",
          "SLF.LibSepTLCbuffer",
          "SLF.LibSepVar",
          "SLF.LibSepFmap",
          "SLF.LibSepSimpl"
        ],
        "SLF.LibSepSimpl":["SLF.LibCore","SLF.LibSepTLCbuffer"],
        "SLF.LibSepSimpl2":["SLF.LibCore","SLF.LibSepTLCbuffer"],
        "SLF.LibSepTLCbuffer":["SLF.LibInt"],
        "SLF.LibSepTyping":["SLF.Partial"],
        "SLF.LibSepVar":[
          "SLF.LibListExec",
          "SLF.LibString",
          "SLF.LibList",
          "SLF.LibCore",
          "SLF.LibSepFmap",
          "SLF.LibSepTLCbuffer"
        ],
        "SLF.LibSepWpgenSummary":["SLF.LibSepReference","SLF.Rules","SLF.WPgen","SLF.Basic","SLF.Repr"],
        "SLF.LibSet":[
          "Coq.Classes.Morphisms",
          "SLF.LibTactics",
          "SLF.LibLogic",
          "SLF.LibReflect",
          "SLF.LibList",
          "SLF.LibContainer"
        ],
        "SLF.LibString":["SLF.LibTactics","SLF.LibReflect","Coq.Strings.String"],
        "SLF.LibSum":["SLF.LibTactics","SLF.LibLogic","SLF.LibBool"],
        "SLF.LibTactics":[
          "Coq.Lists.List",
          "Coq.Numbers.BinNums",
          "Coq.ZArith.BinInt",
          "Coq.Logic.ProofIrrelevance",
          "Coq.Program.Equality",
          "Coq.Arith.Compare_dec",
          "Coq.micromega.Lia"
        ],
        "SLF.LibUnit":["SLF.LibTactics","SLF.LibLogic","SLF.LibReflect"],
        "SLF.LibWf":["SLF.LibTactics","SLF.LibLogic"],
        "SLF.Nondet":["SLF.LibSepReference"],
        "SLF.Partial":["SLF.Nondet"],
        "SLF.Repr":["SLF.LibSepReference","SLF.Basic"],
        "SLF.Rich":["SLF.LibSepReference","SLF.LibSepTLCbuffer","SLF.Basic","SLF.Repr"],
        "SLF.Rules":["SLF.LibSepReference","SLF.Basic"],
        "SLF.Struct":["SLF.LibSepReference","SLF.LibSepTLCbuffer"],
        "SLF.WPgen":["SLF.WPsem"],
        "SLF.WPsem":["SLF.Rules"],
        "SLF.Wand":["SLF.LibSepReference","SLF.Repr"]
      }
    }
  ]
}